rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && 
        (request.auth.uid == userId || 
         (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' && 
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.verified == true));
    }
    
    // Alerts collection - only verified admins can create
    match /alerts/{alertId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.verified == true;
      allow update: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.verified == true;
    }
    
    // Sightings collection - any authenticated user can create
    match /sightings/{sightingId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.verified == true;
    }
    
    // Admin verifications - only admins can manage
    match /admin_verifications/{uid} {
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.verified == true;
    }
    
    // Message logs (for mock mode)
    match /message_logs/{logId} {
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow write: if true; // Cloud Functions can write
    }
  }
}